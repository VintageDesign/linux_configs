priority -50

snippet main
int main(int argc, const char* argv[])
{
    ${0}
    return 0;
}
endsnippet

snippet inc
#include <${1:stdio.h}>
endsnippet

snippet once "include header guard" b
#ifndef ${1:`!p snip.rv = (snip.basename or "foo").upper() + '_H'`}
#define $1
${0:${VISUAL}}
#endif // $1
endsnippet

snippet "#?ifnd?e?f?" "C preprocessor ifndef" rb
#ifndef ${1:DEFINE}
${0:${VISUAL}}
#endif // $1
endsnippet

snippet "#?ifde?f?" "C preprocessor ifdef" rb
#ifdef ${1:DEFINE}
${0:${VISUAL}}
#endif // $1
endsnippet

snippet for
for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:limit}; ${5:++$2})
{
    ${0:${VISUAL}}
}
endsnippet

snippet printf "printf .. (printf)"
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet struct
struct ${1:Struct}
{
    ${0}
};
endsnippet

snippet "func?t?i?o?n?" "function" r
${1:void} ${2:foo}(${3})
{
    ${0:${VISUAL}}
}
endsnippet

snippet if
if (${1:condition})
{
    ${0:${VISUAL}}
}
endsnippet

snippet elif
else if (${1:condition})
{
    ${0:${VISUAL}}
}
endsnippet

snippet else
else
{
    ${0:${VISUAL}}
}
endsnippet

snippet "terna?r?y?" "ternary" r
${1:condition} ? ${2:trueval} : ${3:falseval}
endsnippet

snippet switch
switch (${1:variable})
{
    case ${2:value}:
    {
        ${3}
        ${4:break}
    }
    ${5}
}
endsnippet

snippet case
    case ${1:value}:
    {
        ${2}
        ${3:break;}
    }
    ${4}
endsnippet

snippet typedef
typedef ${1:type} ${2:alias_t};
endsnippet
